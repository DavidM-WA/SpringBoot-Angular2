import org.gradle.api.tasks.Exec
import org.apache.tools.ant.taskdefs.condition.Os

defaultTasks 'clean', 'npm', 'buildng', 'build'

buildscript {
	ext {
		springBootVersion = '1.4.3.RELEASE'
		npmCommand = Os.isFamily(Os.FAMILY_WINDOWS) ? 'npm.cmd' : 'npm'
		ngBuildCommand = Os.isFamily(Os.FAMILY_WINDOWS) ? 'ng.cmd' : 'ng'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

task npmBin << {
	new ByteArrayOutputStream().withStream { os ->
		exec {
			executable = npmCommand
			args = ['bin']
			standardOutput = os
		}
		ext.binPath = os.toString().trim() + File.separator
	}
}

// Install packages from package.json
	task npm(type: Exec) {
	description = "Install NodeJS dependencies from package.json file"
	commandLine = [npmCommand, "install"]
	inputs.file "package.json"
	outputs.dir "node_modules"

	//extension method stopTomcat.output() can be used to obtain the output:
    ext.output = {
        return standardOutput.toString()
    }

    standardOutput = System.out
    errorOutput = System.out

	tasks.npmBin.execute()
}

task buildng(type: Exec) {
	description = "Install Build AngularJS 2 frontend app"
	if (project.hasProperty('prod')){
		commandLine = [ngBuildCommand, "build", "--prod"]
	} else {
		commandLine = [ngBuildCommand, "build"]
	}
    

    //store the output instead of printing to the console:
    standardOutput = new ByteArrayOutputStream()

    //extension method stopTomcat.output() can be used to obtain the output:
    ext.output = {
        return standardOutput.toString()
    }

    standardOutput = System.out
    errorOutput = System.out
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'

jar {
	baseName = 'project'
	version = '0.0.1-SNAPSHOT'
}

sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

dependencies {
	compile group: 'org.apache.commons', name: 'commons-collections4', version: '4.0'
	compile group: 'commons-configuration', name: 'commons-configuration', version: '1.6'
	compile group: 'mysql', name: 'mysql-connector-java', version: '5.1.6'
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
  	compile("org.springframework.boot:spring-boot-starter-security")
  	compile group: 'org.springframework', name: 'spring-websocket', version: '4.0.0.RELEASE'
	testCompile('org.springframework.boot:spring-boot-starter-test')
}
